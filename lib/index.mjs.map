{"version":3,"sources":["../core/EasyClassName.ts","../core/classname.ts"],"sourcesContent":["import { EasyClassNameClass } from \"./type\";\n\nexport default class EasyClassName implements EasyClassNameClass {\n  styles: EasyClassNameClass[\"styles\"];\n  mode: EasyClassNameClass[\"mode\"];\n\n  constructor(styles: EasyClassNameClass[\"styles\"], mode: EasyClassNameClass[\"mode\"] = \"normal\") {\n    this.styles = styles;\n    this.mode = mode;\n  }\n\n  create(name: string, controlClass: Record<string, boolean> = {}): any {\n    const _classNames = [] as string[];\n    name.split(\" \").forEach((v) => {\n      const _styleName = this.mode === \"module\" && this.styles[v] ? this.styles[v] : v;\n      _styleName && _classNames.push(_styleName);\n    });\n    Object.keys(controlClass).forEach((key) => {\n      if (!controlClass[key]) return;\n      const _styleName = this.mode === \"module\" && this.styles[key] ? this.styles[key] : key;\n      _styleName && _classNames.push(_styleName);\n    });\n    return _classNames.join(\" \");\n  }\n\n  createClassName = (name: string, controlClass: Record<string, boolean> = {}) => {\n    return { className: this.create(name, controlClass) };\n  };\n\n  static createClassName = (name: string, controlClass: Record<string, boolean> = {}) => {\n    const _classNames = [] as string[];\n  }\n}\n","import { Styles } from \"./type\";\n\ntype EcnType = (name: string | Array<string | undefined>, controlClass?: Record<string, boolean>, styles?: Styles) => string;\nexport const ecn: EcnType = (name, controlClass = {}, styles = {}) => {\n  const _classNames = [] as string[];\n  const resolveName = (v: string | undefined) => {\n    if (!v || typeof v !== \"string\") return;\n    v.split(\" \").forEach((v) => {\n      const _styleName = styles && styles[v] ? styles[v] : v;\n      _styleName && _classNames.push(_styleName);\n    });\n  };\n\n  if (Array.isArray(name)) {\n    name.forEach((v) => {\n      resolveName(v);\n    });\n  } else {\n    resolveName(name);\n  }\n\n  Object.keys(controlClass).forEach((key) => {\n    if (!controlClass[key]) return;\n    const _styleName = styles && styles[key] ? styles[key] : key;\n    _styleName && _classNames.push(_styleName);\n  });\n  return _classNames.join(\" \");\n};\n"],"mappings":"AAEA,IAAqBA,EAArB,KAAiE,CAI/D,YAAYC,EAAsCC,EAAmC,SAAU,CAmB/F,qBAAkB,CAACC,EAAcC,EAAwC,CAAC,KACjE,CAAE,UAAW,KAAK,OAAOD,EAAMC,CAAY,CAAE,GAnBpD,KAAK,OAASH,EACd,KAAK,KAAOC,CACd,CAEA,OAAOC,EAAcC,EAAwC,CAAC,EAAQ,CACpE,IAAMC,EAAc,CAAC,EACrB,OAAAF,EAAK,MAAM,GAAG,EAAE,QAASG,GAAM,CAC7B,IAAMC,EAAa,KAAK,OAAS,UAAY,KAAK,OAAOD,CAAC,EAAI,KAAK,OAAOA,CAAC,EAAIA,EAC/EC,GAAcF,EAAY,KAAKE,CAAU,CAC3C,CAAC,EACD,OAAO,KAAKH,CAAY,EAAE,QAASI,GAAQ,CACzC,GAAI,CAACJ,EAAaI,CAAG,EAAG,OACxB,IAAMD,EAAa,KAAK,OAAS,UAAY,KAAK,OAAOC,CAAG,EAAI,KAAK,OAAOA,CAAG,EAAIA,EACnFD,GAAcF,EAAY,KAAKE,CAAU,CAC3C,CAAC,EACMF,EAAY,KAAK,GAAG,CAC7B,CASF,EA9BqBL,EA2BZ,gBAAkB,CAACG,EAAcC,EAAwC,CAAC,IAAM,CACrF,IAAMC,EAAc,CAAC,CACvB,EC5BK,IAAMI,EAAe,CAACC,EAAMC,EAAe,CAAC,EAAGC,EAAS,CAAC,IAAM,CACpE,IAAMC,EAAc,CAAC,EACfC,EAAeC,GAA0B,CACzC,CAACA,GAAK,OAAOA,GAAM,UACvBA,EAAE,MAAM,GAAG,EAAE,QAASA,GAAM,CAC1B,IAAMC,EAAaJ,GAAUA,EAAOG,CAAC,EAAIH,EAAOG,CAAC,EAAIA,EACrDC,GAAcH,EAAY,KAAKG,CAAU,CAC3C,CAAC,CACH,EAEA,OAAI,MAAM,QAAQN,CAAI,EACpBA,EAAK,QAASK,GAAM,CAClBD,EAAYC,CAAC,CACf,CAAC,EAEDD,EAAYJ,CAAI,EAGlB,OAAO,KAAKC,CAAY,EAAE,QAASM,GAAQ,CACzC,GAAI,CAACN,EAAaM,CAAG,EAAG,OACxB,IAAMD,EAAaJ,GAAUA,EAAOK,CAAG,EAAIL,EAAOK,CAAG,EAAIA,EACzDD,GAAcH,EAAY,KAAKG,CAAU,CAC3C,CAAC,EACMH,EAAY,KAAK,GAAG,CAC7B","names":["EasyClassName","styles","mode","name","controlClass","_classNames","v","_styleName","key","ecn","name","controlClass","styles","_classNames","resolveName","v","_styleName","key"]}